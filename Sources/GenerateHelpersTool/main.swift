// Sources/GenerateHelpersTool/main.swift
import Foundation

let fileManager = FileManager.default
let currentDirectoryPath = fileManager.currentDirectoryPath
let filePath = "\(currentDirectoryPath)/Endpoint.swift"

let content = """
// Generated by GenerateEndpointTool
import Foundation

enum Endpoint {
    case example
    case anotherExample
}
"""

// Generate the Endpoint.swift file
if fileManager.fileExists(atPath: filePath) {
    print("Endpoint.swift already exists at \(filePath).")
} else {
    do {
        try content.write(toFile: filePath, atomically: true, encoding: .utf8)
        print("Endpoint.swift has been generated at \(filePath).")
    } catch {
        print("Failed to write Endpoint.swift: \(error)")
        exit(1)
    }
}

// Locate the script path
// Locate the script path
let scriptPath = URL(fileURLWithPath: currentDirectoryPath)
    .appendingPathComponent("Scripts")
    .appendingPathComponent("add_endpoint_to_xcode.sh")
    .path

if !fileManager.fileExists(atPath: scriptPath) {
    print("Script not found at \(scriptPath).")
    exit(1)
}

// Execute the shell script to add the file to the Xcode project
let process = Process()
process.executableURL = URL(fileURLWithPath: "/bin/bash")
process.arguments = [scriptPath]

do {
    try process.run()
    process.waitUntilExit()

    if process.terminationStatus == 0 {
        print("Endpoint.swift has been added to the Xcode project.")
    } else {
        print("Failed to add Endpoint.swift to the Xcode project.")
    }
} catch {
    print("Failed to run the script: \(error)")
    exit(1)
}
